{{- $fullName := include "service.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "service.labels" . | nindent 4 }}
    {{- include "service.dataDogLabels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      name: "{{ $fullName }}"
      annotations:
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
        checksum: {{ tpl (toYaml .Values) . | sha256sum }}
        rollout: {{ randAlphaNum 6 | quote }}
      labels:
        {{- include "service.selectorLabels" . | nindent 8 }}
        {{- include "service.dataDogLabels" . | nindent 8}}
    spec:
      serviceAccountName: {{ include "service.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: "{{ .Chart.Name }}"
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["sh", "-c"]
          args: ["firebase --token 'owner' emulators:start --project '{{ .Values.app.config.google_project_id }}' --debug"]
          envFrom:
            - configMapRef:
                name: firebase
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - name: json
              mountPath: "/home/node/firebase.json"
              subPath: "firebase.json"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: json
          configMap:
            name: firebase-json
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
  